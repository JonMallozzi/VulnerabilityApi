package com.jonmallozzi.vulnerabilityapi.MockData;

import com.jonmallozzi.vulnerabilityapi.Model.*;

import java.time.LocalDateTime;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class MockVulnerability {
    public CveDataMeta cveDataMeta = new CveDataMeta(
            "CVE-2022-27607",
            "cve@mitre.org"
    );

    public CveDataMeta cveDataMeta1 = new CveDataMeta(
            "CVE-2022-27608",
            "cve@mitre.org"
    );

    public CveDataMeta cveDataMeta2 = new CveDataMeta(
            "CVE-2022-27609",
            "cve@mitre.org"
    );

    public CveDataMeta cveDataMetaNew1 = new CveDataMeta(
            "CVE-2022-27610",
            "cve@mitre.org"
    );

    public CveDataMeta cveDataMetaNew2 = new CveDataMeta(
            "CVE-2022-27611",
            "cve@mitre.org"
    );

    public ReferenceData referenceData = new ReferenceData(
            "https://github.com/axiomatic-systems/Bento4/issues/677",
            "https://github.com/axiomatic-systems/Bento4/issues/677",
            "MISC",
            List.of()
    );

    public References references = new References(
            List.of(referenceData)
    );

    public DescriptionData descriptionData = new DescriptionData(
            "en",
            "Bento4 1.6.0-639 has a heap-based buffer over-read in the AP4_HvccAtom class, a related issue to CVE-2018-14531."
    );

    public Description description = new Description(
            List.of(descriptionData)
    );

    public CvssV3 cvssV3 = new CvssV3(
                        "3.1",
                                "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
                                "NETWORK",
                                "LOW",
                                "NONE",
                                "NONE",
                                "UNCHANGED",
                                "NONE",
                                "NONE",
                                "HIGH",
                                "7.5",
                                "high"
    );

    public BaseMetricV3 baseMetricV3 = new BaseMetricV3(
            cvssV3,
            3.9,
            3.6
    );

    public Impact impactWithV3 = new Impact(
            baseMetricV3,
            null
    );

    public CvssV2 cvssV2 = new CvssV2(
                    "2.0",
                    "AV:N/AC:L/Au:N/C:N/I:N/A:P",
                    "network",
                    "LOW",
                    "NONE",
                    "NONE",
                    "NONE",
                    "PARTIAL",
                    "5.0",
                    "5.0"
    );

   public BaseMetricV2 baseMetricV2 = new BaseMetricV2(
                        cvssV2,
                "medium",
           10.0,
                    2.9,
                    false,
                false,
                false,
                    false,
                    false
    );
    public Impact impactWithV2 = new Impact(
            null,
            baseMetricV2
    );

    public Impact impact = new Impact(
            baseMetricV3,
            baseMetricV2
    );

    public Cve cve = new Cve(
            "CVE",
            "MITRE",
            "4.0",
            cveDataMeta,
            references,
            description
    );

    public Cve cve1 = new Cve(
            "CVE",
            "MITRE",
            "4.0",
            cveDataMeta1,
            references,
            description
    );

    public Cve cve2 = new Cve(
            "CVE",
            "MITRE",
            "4.0",
            cveDataMeta2,
            references,
            description
    );

    public Cve cveNew1 = new Cve(
            "CVE",
            "MITRE",
            "4.0",
            cveDataMetaNew1,
            references,
            description
    );

    public Cve cveNew2 = new Cve(
            "CVE",
            "MITRE",
            "4.0",
            cveDataMetaNew2,
            references,
            description
    );


    public Vulnerability vulnerability = new Vulnerability(
            cve,
            impact,
            LocalDateTime.of(2022,3,21,23,15),
            LocalDateTime.of(2022,3,21,23,15)
    );

    public Vulnerability vulnerabilityV3 = new Vulnerability(
            cve1,
            impactWithV3,
            LocalDateTime.of(2022,3,21,23,15),
            LocalDateTime.of(2022,3,21,23,15)
    );

    public Vulnerability vulnerabilityV2 = new Vulnerability(
            cve2,
            impactWithV2,
            LocalDateTime.of(2022,3,21,23,15),
            LocalDateTime.of(2022,3,21,23,15)
    );

    public Vulnerability vulnerabilityNew1 = new Vulnerability(
            cveNew1,
            impactWithV2,
            LocalDateTime.of(2022,3,21,23,15),
            LocalDateTime.of(2022,3,21,23,15)
    );

    public Vulnerability vulnerabilityNew2 = new Vulnerability(
            cveNew2,
            impactWithV2,
            LocalDateTime.of(2022,3,21,23,15),
            LocalDateTime.of(2022,3,21,23,15)
    );

    public Map<String, Vulnerability> vulnerabilities = new HashMap<>(Map.of(
            cveDataMeta.getID(), vulnerability,
            cveDataMeta1.getID(), vulnerabilityV3,
            cveDataMeta2.getID(), vulnerabilityV2
    ));
}
