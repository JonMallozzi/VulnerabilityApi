package com.jonmallozzi.vulnerabilityapi;

import com.fasterxml.jackson.core.type.TypeReference;
import com.fasterxml.jackson.databind.ObjectMapper;
import com.fasterxml.jackson.datatype.jsr310.JavaTimeModule;
import com.jonmallozzi.vulnerabilityapi.Model.Vulnerability;
import com.jonmallozzi.vulnerabilityapi.Service.VulnerabilityService;
import org.springframework.boot.CommandLineRunner;
import org.springframework.boot.SpringApplication;
import org.springframework.boot.autoconfigure.SpringBootApplication;
import org.springframework.context.annotation.Bean;

import java.io.IOException;
import java.io.InputStream;
import java.util.List;

@SpringBootApplication
public class VulnerabilityApiApplication {

    public static void main(String[] args) {
        SpringApplication.run(VulnerabilityApiApplication.class, args);
    }

    @Bean
    CommandLineRunner runner(VulnerabilityService vulnerabilityService){
        return args -> {
            // read JSON and load json
            ObjectMapper mapper = new ObjectMapper();
            mapper.registerModule(new JavaTimeModule());
            TypeReference<List<Vulnerability>> typeReference = new TypeReference<List<Vulnerability>>(){};
//            InputStream inputStream = TypeReference.class.getResourceAsStream("/json/nvdcve-1.1-recent-1cve.json");
            InputStream inputStream = TypeReference.class.getResourceAsStream("/json/nvdcve-1.1-recent.json");
            try {
                List<Vulnerability> vulnerabilities = mapper.readValue(inputStream,typeReference);
                vulnerabilityService.save(vulnerabilities);
                System.out.println("Vulnerabilities Saved");
            } catch (IOException e){
                System.out.println("Unable to save vulnerabilities: " + e.getMessage());
            }
        };
    }

}
